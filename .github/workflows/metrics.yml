name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, master ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: barbanera/practice

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          cache-read-only: false  # Added this for better caching

      - name: Make gradlew executable
        working-directory: ./metrics
        run: chmod +x gradlew

      - name: Run tests
        working-directory: ./metrics
        run: ./gradlew test  # Removed 'clean' - unnecessary and slows down

  build-and-push:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    outputs:
      image-tag: ${{ steps.image-tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure swap space
        run: |
          sudo fallocate -l 4G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          cache-read-only: false

      # Removed the manual Gradle cache - gradle-build-action handles this better

      - name: Make gradlew executable
        working-directory: ./metrics
        run: chmod +x ./gradlew

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate image tag
        id: image-tag
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          SHORT_SHA=${GITHUB_SHA::7}
          IMAGE_TAG="${BRANCH_NAME}-${SHORT_SHA}"
          echo "tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT

      # Enhanced Docker layer caching
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-buildx-${{ hashFiles('**/Dockerfile', '**/build.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-docker-buildx-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
          driver-opts: |
            network=host

      - name: Native Compile
        working-directory: ./metrics
        run: ./gradlew nativeCompile
        env:
          GRADLE_OPTS: "-Xmx8g"

      # Pre-configure buildpacks for better performance
      - name: Build and push with bootBuildImage
        working-directory: ./metrics
        run: |
          ./gradlew bootBuildImage -x test -x nativeCompile\
            --imageName=${{ env.IMAGE_NAME }}:${{ steps.image-tag.outputs.tag }} \
            --publishImage
        env:
          DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
          DOCKER_BUILDKIT: 1
          # Buildpack optimizations
          BP_JVM_VERSION: "24"
          BPL_JVM_HEAD_ROOM: "5"
          BP_GRADLE_BUILD_ARGUMENTS: "--no-daemon --parallel"

      - name: Tag and push latest
        if: github.ref == 'refs/heads/master'
        run: |
          docker tag ${{ env.IMAGE_NAME }}:${{ steps.image-tag.outputs.tag }} ${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.IMAGE_NAME }}:latest

  update-gitops:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout GitOps repo
        uses: actions/checkout@v4
        with:
          repository: arenabrab/practice-gitops
          token: ${{ secrets.GITOPS_TOKEN }}
          path: gitops

      - name: Update image tag
        run: |
          cd gitops/clusters/local/apps/metrics
          NEW_TAG=${{ needs.build-and-push.outputs.image-tag }}
          sed -i "s/newTag:.*/newTag: ${NEW_TAG}/" kustomization.yaml

      - name: Commit and push changes
        run: |
          cd gitops
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add .
          git commit -m "Update image tag to ${{ needs.build-and-push.outputs.image-tag }}" || exit 0
          git push