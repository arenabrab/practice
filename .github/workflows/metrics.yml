#on:
#  push:
#    paths:
#      - 'metrics/**'
#
#permissions:
#  contents: write
#  packages: write
#
#
#env:
#  CI_REGISTRY_USER: ${{ github.actor }}
#  LOCAL_DEV_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
##    services:
##      docker:
##        image: docker:dind
##        options: --privileged
#
#    steps:
#      - name: checkout code
#        uses: actions/checkout@v4
#
#      - name: set up jdk
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'temurin'
#          java-version: '24'
#
##      - name: 🧰 Set up Docker
##        uses: docker/setup-buildx-action@v3
#
#      - name: chmod gradle
#        working-directory: ./metrics
#        run: chmod +x gradlew
#
#      - name: 💾 Cache Gradle
#        uses: actions/cache@v3
#        with:
#          path: ~/.gradle/caches
#          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: gradle-${{ runner.os }}-
#
#      - name: bootBuildImage
#        working-directory: ./metrics
#        run: ./gradlew bBI
#          #--imageName=ghcr.io/arenabrab/practice:{{ github.sha }}
#
##      - name: 🔍 Extract image digest
##        id: digest
##        run: |
##          digest=$(crane digest ghcr.io/andrewsmith/my-spring-app@${{ github.sha }})
##          echo "digest=$digest" >> $GITHUB_OUTPUT
##
##      - name: 💾 Update Flux image digest
##        run: |
##          yq e '.images[0].newDigest = "${{ steps.digest.outputs.digest }}"' -i metrics/kustomize/kustomization.yaml
#
#
#      - name: test
#        working-directory: ./metrics
#        run: ./gradlew test

name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: barbanera/metrics

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run tests
        run: mvn clean test

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-gitops:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout GitOps repo
        uses: actions/checkout@v4
        with:
          repository: your-username/my-spring-app-gitops
          token: ${{ secrets.GITOPS_TOKEN }}
          path: gitops

      - name: Update image tag
        run: |
          cd gitops/clusters/local/apps/my-spring-app
          # Extract just the tag from the full image reference
          NEW_TAG=$(echo "${{ needs.build-and-push.outputs.image-tag }}" | grep -o 'main-[a-f0-9]\{7\}' || echo "latest")
          sed -i "s/newTag:.*/newTag: ${NEW_TAG}/" kustomization.yaml

      - name: Commit and push changes
        run: |
          cd gitops
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add .
          git commit -m "Update image tag to ${{ needs.build-and-push.outputs.image-tag }}" || exit 0
          git push