on:
  push:
    paths:
      - 'metrics/**'

permissions:
  contents: write
  packages: write


env:
  CI_REGISTRY_USER: ${{ github.actor }}
  LOCAL_DEV_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

#    services:
#      docker:
#        image: docker:dind
#        options: --privileged

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: set up jdk
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'

#      - name: 🧰 Set up Docker
#        uses: docker/setup-buildx-action@v3

      - name: chmod gradle
        working-directory: ./metrics
        run: chmod +x gradlew

      - name: 💾 Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: bootBuildImage
        working-directory: ./metrics
        run: ./gradlew bBI
          #--imageName=ghcr.io/arenabrab/practice:{{ github.sha }}

#      - name: 🔍 Extract image digest
#        id: digest
#        run: |
#          digest=$(crane digest ghcr.io/andrewsmith/my-spring-app@${{ github.sha }})
#          echo "digest=$digest" >> $GITHUB_OUTPUT
#
#      - name: 💾 Update Flux image digest
#        run: |
#          yq e '.images[0].newDigest = "${{ steps.digest.outputs.digest }}"' -i metrics/kustomize/kustomization.yaml


      - name: test
        working-directory: ./metrics
        run: ./gradlew test